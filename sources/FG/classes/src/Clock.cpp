//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  Project : Function Generator
//  @ File Name : Clock.cpp
//  @ Date : 2015/05/25
//  @ Author : Kazuki Kikuchi
//
//


#include "Clock.hpp"
#include "Timer.hpp"

Clock::Clock()
	: m_nop(0)
	, m_dt(0)
	, m_pinv(0)
	, m_phase(0)
	, m_f(0)
	, m_k(0)
	, m_phase_shift_point(0)
{
	
}

void Clock::SetFreq(unsigned int fin) {
	m_f = fin;
	m_pinv = (float)(m_f * m_nop) * m_dt; 
}

void Clock::SetDt() {
	//m_dt = dtin;
	m_dt = Timer::SGetDt();
}

void Clock::SetNop(unsigned int nopin) {
	m_nop = nopin;
}

void Clock::SetPhase(unsigned int phain) {
	m_phase = phain;
	m_phase_shift_point = (unsigned int)((float)m_nop * m_phase);
}

void Clock::Set(unsigned int fin, unsigned int nopin, unsigned int phain){
	SetDt();
	SetNop(nopin);
	SetFreq(fin);
	SetPhase(phain);
}

unsigned int Clock::Update() {
	m_k = (m_k + (unsigned int)m_pinv + m_phase_shift_point) % m_nop;
	return m_k;
}

unsigned int Clock::GetFreq(){ return m_f;};
float Clock::GetDt(){ return m_dt;};
unsigned int Clock::GetNop(){ return m_nop;};
unsigned int Clock::GetPhase(){ return m_phase;};


